# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EsNeNl6pRcww5w6ED3Tr3D6F6jECJ5MK
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import pickle

# Load your dataset containing features (IPO Size, Subscription, GMP, Estimated Price, Listing Price) and LT Price
# Assuming your dataset is in a CSV file named 'data.csv'
data = pd.read_csv('/home/harshil/AIbasics_ws/Stock Market/ipo.csv')

# Separate features (X) and target variable (y)
data= data.drop(['IPO', 'Listing Date','Estimated Percentage', 'Listing Percentage', 'LT Percentage'], axis=1)
data = data.dropna(how='any', subset= 'LT Price')
x = data.iloc[:,:-1].values
y = data.iloc[:,-1].values

# Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

# Train the linear regression model
model = LinearRegression()
model.fit(x_train, y_train)

# Evaluate the model
train_score = model.score(x_train, y_train)
test_score = model.score(x_test, y_test)

print(f"Training R^2 score: {train_score}")
print(f"Testing R^2 score: {test_score}")
ip = (285, 150, 310, 340, 650, 730)
arr = np.asarray(ip)
ip_reshaped = arr.reshape(1,-1)
pre = model.predict(ip_reshaped)
print(pre)
print(" LT % is ", ((pre-arr[5])/(pre)*100))

if(pre>= 1.2*arr[5]):
  print("Must buy")

else:
  print("Not buy")
# Save the trained model to a file
#with open('linear_regression_model.pkl', 'wb') as file:
    #pickle.dump(model, file)

